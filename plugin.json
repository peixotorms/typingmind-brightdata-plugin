{
  "version": 2,
  "uuid": "brightdata-web-fetcher",
  "id": "brightdata-web-fetcher",
  "title": "BrightData Web Fetcher",
  "emoji": "üåê",
  "iconURL": "",
  "description": "Comprehensive web data extraction plugin that searches Google using BrightData SERP API and fetches webpage content using BrightData Web Unlocker API. Uses OpenAI to extract clean, structured data from HTML content.",
  "userSettings": [
    {
      "name": "serpApiKey",
      "label": "BrightData SERP API Key",
      "description": "Your BrightData API key for Google search requests. Required for web, news, and shopping searches.",
      "type": "password",
      "required": true
    },
    {
      "name": "serpZone",
      "label": "SERP Zone ID",
      "description": "BrightData zone identifier for SERP API requests. Leave default unless using a custom zone.",
      "defaultValue": "serp_api1_web_search",
      "required": false
    },
    {
      "name": "unlockerApiKey",
      "label": "BrightData Web Unlocker API Key",
      "description": "Your BrightData API key for bypassing website protections when fetching webpages. Required for content extraction from protected sites.",
      "type": "password",
      "required": true
    },
    {
      "name": "unlockerZone",
      "label": "Web Unlocker Zone ID",
      "description": "BrightData zone identifier for Web Unlocker API requests. Leave default unless using a custom zone.",
      "defaultValue": "web_unlocker1",
      "required": false
    },
    {
      "name": "openaiApiKey",
      "label": "OpenAI API Key",
      "description": "Your OpenAI API key for processing HTML content and extracting clean, readable text from webpages. Required for intelligent content extraction.",
      "type": "password",
      "required": true
    },
    {
      "name": "openaiModel",
      "label": "OpenAI Model",
      "description": "OpenAI model used for HTML content processing and text extraction. Higher models provide better accuracy but cost more.",
      "type": "enum",
      "values": [
        "gpt-4.1",
        "o4-mini",
        "gpt-4.1-mini",
        "gpt-4.1-nano"
      ],
      "defaultValue": "gpt-4.1-mini",
      "required": false
    }
  ],
  "openaiSpec": {
    "name": "brightdata_web_fetcher",
    "description": "Search Google using BrightData SERP API or fetch webpage content using BrightData Web Unlocker API. Returns structured search results with source name, title, excerpt, and URL; for HTML pages returns AI-extracted clean article content; for JSON/XML/JavaScript/CSS/text files returns raw content as-is; errors for unsupported binary file types.",
    "parameters": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "enum": [
            "search",
            "fetch"
          ],
          "description": "Action to perform: 'search' uses BrightData SERP API for Google searches; 'fetch' uses BrightData Web Unlocker API to extract content from URLs"
        },
        "query": {
          "type": "string",
          "description": "Search query for Google searches. Can include operators like site:, filetype:, quotes for exact phrases, etc. Only required when action is 'search'."
        },
        "tbm": {
          "type": "string",
          "enum": [
            "nws",
            "shop"
          ],
          "description": "Google search type: 'nws' for news, 'shop' for shopping. Omit for regular web search."
        },
        "ibp": {
          "type": "string",
          "description": "For Jobs search, use 'htl;jobs'. Only used when searching for job listings."
        },
        "gl": {
          "type": "string",
          "description": "Two-letter country code for search localization (e.g., 'us', 'uk', 'ca'). Defines the country of search."
        },
        "hl": {
          "type": "string",
          "description": "Two-letter language code for search localization (e.g., 'en', 'es', 'fr'). Defines the page language."
        },
        "start": {
          "type": "integer",
          "description": "Result offset for pagination. 0 (default) for first page, 20 for second page, 40 for third page, etc."
        },
        "num": {
          "type": "integer",
          "description": "Number of results to return. Default is 20, maximum varies by search type."
        },
        "url": {
          "type": "string",
          "description": "Complete URL to fetch content from using Web Unlocker API. Supports HTML pages (processed with AI), JSON/XML/JavaScript/CSS files (returned as-is), and other text-based content. Binary files and images are not supported."
        }
      },
      "required": [
        "action"
      ]
    }
  },
  "implementationType": "javascript",
  "implementation": "implementation.js"
}

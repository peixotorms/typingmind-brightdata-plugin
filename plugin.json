{
  "version": 2,
  "uuid": "brightdata-web-fetcher",
  "id": "brightdata-web-fetcher",
  "title": "BrightData Web Fetcher",
  "emoji": "üåê",
  "iconURL": "",
  "description": "Automatically search or fetch web content using BrightData SERP & Web Unlocker APIs based on natural language instructions.",
  "userSettings": [
    {
      "name": "serpApiKey",
      "label": "BrightData SERP API Key",
      "description": "Your BrightData API key for SERP (search) requests",
      "type": "password",
      "required": true
    },
    {
      "name": "serpZone",
      "label": "SERP Zone ID",
      "description": "BrightData zone identifier for SERP API (default: serp_api1_web_search)",
      "defaultValue": "serp_api1_web_search",
      "required": false
    },
    {
      "name": "unlockerApiKey",
      "label": "BrightData Web Unlocker API Key",
      "description": "Your BrightData API key for Web Unlocker requests",
      "type": "password",
      "required": true
    },
    {
      "name": "unlockerZone",
      "label": "Web Unlocker Zone ID",
      "description": "BrightData zone identifier for Web Unlocker API (default: web_unlocker1)",
      "defaultValue": "web_unlocker1",
      "required": false
    },
    {
      "name": "autoEnabled",
      "label": "Enable Automatic Web Fetching",
      "description": "Whether the plugin should automatically handle web searches and page fetching",
      "type": "enum",
      "values": [
        "true",
        "false"
      ],
      "defaultValue": "true",
      "required": false
    }
  ],
  "openaiSpec": {
    "name": "brightdata_web_fetcher",
    "description": "Search the web or fetch webpage content using BrightData APIs. Automatically chooses between search (SERP API) or fetch (Web Unlocker API) based on the action property.",
    "parameters": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "enum": [
            "search",
            "fetch"
          ],
          "description": "Action to perform: 'search' for web searches, 'fetch' for getting webpage content"
        },
        "query": {
          "type": "string",
          "description": "Search query (required when action is 'search')"
        },
        "search_type": {
          "type": "string",
          "enum": [
            "web",
            "news",
            "images",
            "videos",
            "shopping",
            "scholar"
          ],
          "description": "Type of search (only used when action is 'search')",
          "default": "web"
        },
        "url": {
          "type": "string",
          "description": "URL to fetch content from (required when action is 'fetch')"
        }
      },
      "required": [
        "action"
      ]
    }
  },
  "implementationType": "javascript",
  "implementation": "implementation.js"
}

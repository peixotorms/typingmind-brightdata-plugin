{
  "version": 2,
  "uuid": "brightdata-web-fetcher",
  "id": "brightdata-web-fetcher",
  "title": "BrightData Web Fetcher",
  "emoji": "üåê",
  "iconURL": "",
  "description": "Comprehensive web data extraction plugin that searches Google, fetches and processes webpage content, and downloads images. Uses BrightData APIs to bypass restrictions and OpenAI to extract clean, structured data from HTML content.",
  "userSettings": [
    {
      "name": "serpApiKey",
      "label": "BrightData SERP API Key",
      "description": "Your BrightData API key for Google search requests. Required for web, news, images, videos, shopping, and scholar searches.",
      "type": "password",
      "required": true
    },
    {
      "name": "serpZone",
      "label": "SERP Zone ID",
      "description": "BrightData zone identifier for SERP API requests. Leave default unless using a custom zone.",
      "defaultValue": "serp_api1_web_search",
      "required": false
    },
    {
      "name": "unlockerApiKey",
      "label": "BrightData Web Unlocker API Key",
      "description": "Your BrightData API key for bypassing website protections when fetching webpages and downloading images. Required for content extraction and image downloads.",
      "type": "password",
      "required": true
    },
    {
      "name": "unlockerZone",
      "label": "Web Unlocker Zone ID",
      "description": "BrightData zone identifier for Web Unlocker API requests. Leave default unless using a custom zone.",
      "defaultValue": "web_unlocker1",
      "required": false
    },
    {
      "name": "openaiApiKey",
      "label": "OpenAI API Key",
      "description": "Your OpenAI API key for processing HTML content and extracting clean, readable text from webpages. Required for intelligent content extraction.",
      "type": "password",
      "required": true
    },
    {
      "name": "openaiModel",
      "label": "OpenAI Model",
      "description": "OpenAI model used for HTML content processing and text extraction. Higher models provide better accuracy but cost more.",
      "type": "enum",
      "values": [
        "gpt-4.1",
        "o4-mini",
        "gpt-4.1-mini",
        "gpt-4.1-nano"
      ],
      "defaultValue": "gpt-4.1-mini",
      "required": false
    }
  ],
  "openaiSpec": {
    "name": "brightdata_web_fetcher",
    "description": "Comprehensive web data extraction tool that performs Google searches, fetches and intelligently processes webpage content, and downloads images in base64 format for AI analysis. Uses BrightData APIs to bypass website restrictions and OpenAI to extract clean, structured content from HTML.",
    "parameters": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "enum": [
            "search",
            "fetch",
            "download_image"
          ],
          "description": "Action to perform: 'search' performs Google searches and returns structured results with titles, excerpts, and URLs; 'fetch' extracts and processes webpage content using AI to return clean readable text; 'download_image' downloads images from URLs and converts them to base64 format for AI processing"
        },
        "query": {
          "type": "string",
          "description": "Search query for Google searches. Can include operators like site:, filetype:, quotes for exact phrases, etc. Only required when action is 'search'."
        },
        "search_type": {
          "type": "string",
          "enum": [
            "web",
            "news",
            "images",
            "videos",
            "shopping",
            "scholar"
          ],
          "description": "Type of Google search to perform. 'web' for general results, 'news' for recent news articles, 'images' for image search results, 'videos' for video content, 'shopping' for product listings, 'scholar' for academic papers. Only used with 'search' action.",
          "default": "web"
        },
        "url": {
          "type": "string",
          "description": "Complete URL to process. For 'fetch' action: webpage URL to extract content from (supports articles, blogs, documentation, etc.). For 'download_image' action: direct image URL to download and convert to base64 format."
        },
        "image_format": {
          "type": "string",
          "enum": [
            "auto",
            "jpeg",
            "png",
            "webp"
          ],
          "description": "Preferred image format for processing. 'auto' automatically detects format from URL extension or content type. 'jpeg', 'png', 'webp' force specific format handling. Only used with 'download_image' action.",
          "default": "auto"
        }
      },
      "required": [
        "action"
      ]
    }
  },
  "implementationType": "javascript",
  "implementation": "implementation.js"
}
